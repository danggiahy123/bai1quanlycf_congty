const mongoose = require('mongoose');
const Notification = require('../models/Notification');
const Customer = require('../models/Customer');

// K·∫øt n·ªëi MongoDB
mongoose.connect('mongodb://localhost:27017/cafe_management', {
  useNewUrlParser: true,
  useUnifiedTopology: true,
});

async function checkNotifications() {
  try {
    console.log('üîç Checking notifications...');

    // T√¨m customer test
    const customer = await Customer.findOne({ email: 'test@example.com' });
    if (!customer) {
      console.log('‚ùå No test customer found');
      return;
    }

    console.log('üë§ Customer:', customer.fullName, customer._id);

    // T√¨m th√¥ng b√°o
    const notifications = await Notification.find({ user: customer._id });
    console.log('üìä Total notifications for this user:', notifications.length);

    if (notifications.length > 0) {
      console.log('\nüì± Notifications:');
      notifications.forEach((notif, index) => {
        console.log(`${index + 1}. ${notif.title} - ${notif.message}`);
        console.log(`   Type: ${notif.type}, Read: ${notif.isRead}`);
      });
    } else {
      console.log('‚ùå No notifications found for this user');
      
      // T·∫°o th√¥ng b√°o m·ªõi
      console.log('üìù Creating new notifications...');
      const newNotification = new Notification({
        user: customer._id,
        type: 'booking_confirmed',
        title: 'ƒê·∫∑t b√†n th√†nh c√¥ng!',
        message: 'B√†n A1 ƒë√£ ƒë∆∞·ª£c x√°c nh·∫≠n cho ng√†y 15/12/2024 l√∫c 19:00',
        bookingId: null
      });
      await newNotification.save();
      console.log('‚úÖ Created new notification');
    }

  } catch (error) {
    console.error('‚ùå Error checking notifications:', error);
  } finally {
    mongoose.connection.close();
  }
}

checkNotifications();
